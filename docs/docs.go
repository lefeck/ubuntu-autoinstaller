// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/config/default": {
            "get": {
                "description": "Get the default configuration template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Get default configuration",
                "responses": {
                    "200": {
                        "description": "Default config retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to generate default config",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/config/load": {
            "post": {
                "description": "Load and validate a configuration from YAML data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Load configuration from YAML",
                "parameters": [
                    {
                        "description": "YAML data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Config loaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or YAML parsing failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/config/validate": {
            "post": {
                "description": "Validate a configuration object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "config"
                ],
                "summary": "Validate configuration",
                "parameters": [
                    {
                        "description": "Configuration object",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Config validation passed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Config validation failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/download/{id}": {
            "get": {
                "description": "Download the ISO file associated with a completed build task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "ISO"
                ],
                "summary": "Download generated ISO",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Build ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the ISO file for download",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Invalid request or build not completed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Build ID not found or ISO file missing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthz"
                ],
                "summary": "Health",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/iso/build/{id}/logs": {
            "get": {
                "description": "Get the logs of an ISO build process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iso"
                ],
                "summary": "Get build logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Build ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Build logs retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Build ID cannot be empty",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Build ID does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/iso/build/{id}/status": {
            "get": {
                "description": "Get the status of an ISO build process",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iso"
                ],
                "summary": "Get build status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Build ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Build status retrieved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Build ID cannot be empty",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Build ID does not exist",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/iso/generate": {
            "post": {
                "description": "Generate a new ISO image with the provided configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iso"
                ],
                "summary": "Generate ISO image",
                "parameters": [
                    {
                        "description": "ISO generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GenerateISORequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ISO generation started",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to start ISO generation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/iso/upload": {
            "post": {
                "description": "Upload an ISO file to the server",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "iso"
                ],
                "summary": "Upload ISO file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "ISO file to upload",
                        "name": "iso",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ISO file uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Failed to upload ISO file",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/userdata/generate": {
            "post": {
                "description": "Generate a user-data configuration file based on provided config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-data"
                ],
                "summary": "Generate user-data configuration",
                "parameters": [
                    {
                        "description": "Configuration object",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User-data generated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to generate user-data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/userdata/preview": {
            "post": {
                "description": "Preview the user-data configuration that would be generated from a config object",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-data"
                ],
                "summary": "Preview user-data configuration",
                "parameters": [
                    {
                        "description": "Configuration object",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/config.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User-data preview generated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Failed to generate user-data preview",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.GenerateISORequest": {
            "type": "object",
            "required": [
                "sourceType",
                "userData"
            ],
            "properties": {
                "apps": {
                    "description": "local build Application packages",
                    "type": "string"
                },
                "codeName": {
                    "description": "Ubuntu release name (when sourceType is \"download\")",
                    "type": "string"
                },
                "destinationISO": {
                    "description": "Output ISO file path",
                    "type": "string"
                },
                "gpgVerify": {
                    "description": "Whether to perform GPG verification",
                    "type": "boolean"
                },
                "md5Checksum": {
                    "description": "Whether to update MD5 checksum",
                    "type": "boolean"
                },
                "packageList": {
                    "description": "Additional package list",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceISO": {
                    "description": "Local ISO file path (when sourceType is \"local\")",
                    "type": "string"
                },
                "sourceType": {
                    "description": "\"local\" or \"download\"",
                    "type": "string"
                },
                "useHWEKernel": {
                    "description": "Whether to use HWE kernel",
                    "type": "boolean"
                },
                "userData": {
                    "description": "user-data configuration content",
                    "type": "string"
                }
            }
        },
        "config.AptConfig": {
            "type": "object",
            "properties": {
                "disable_components": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disable_suites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "geoip": {
                    "type": "boolean"
                },
                "preserve_sources_list": {
                    "type": "boolean"
                },
                "primary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.PrimaryEntry"
                    }
                }
            }
        },
        "config.Autoinstall": {
            "type": "object",
            "properties": {
                "apt": {
                    "$ref": "#/definitions/config.AptConfig"
                },
                "drivers": {
                    "$ref": "#/definitions/config.DriversConfig"
                },
                "early-commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "identity": {
                    "$ref": "#/definitions/config.Identity"
                },
                "kernel": {
                    "$ref": "#/definitions/config.KernelConfig"
                },
                "keyboard": {
                    "$ref": "#/definitions/config.KeyboardConfig"
                },
                "late-commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locale": {
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/config.NetworkConfig"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shutdown": {
                    "type": "string"
                },
                "ssh": {
                    "$ref": "#/definitions/config.SSHConfig"
                },
                "storage": {
                    "$ref": "#/definitions/config.Storage"
                },
                "timezone": {
                    "type": "string"
                },
                "updates": {
                    "type": "string"
                },
                "user-data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "config.Bond": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "parameters": {
                    "$ref": "#/definitions/config.BondParams"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.BondParams": {
            "type": "object",
            "properties": {
                "gratuitous-arp": {
                    "type": "integer"
                },
                "lacp-rate": {
                    "description": "fast/slow",
                    "type": "string"
                },
                "mii-monitor-interval": {
                    "type": "integer"
                },
                "min-links": {
                    "type": "integer"
                },
                "mode": {
                    "description": "active-backup, balance-rr, 802.3ad...",
                    "type": "string"
                },
                "primary": {
                    "type": "string"
                },
                "transmit-hash-policy": {
                    "type": "string"
                }
            }
        },
        "config.Bridge": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "parameters": {
                    "$ref": "#/definitions/config.BridgeParams"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.BridgeParams": {
            "type": "object",
            "properties": {
                "ageing-time": {
                    "type": "integer"
                },
                "forward-delay": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "stp": {
                    "type": "boolean"
                }
            }
        },
        "config.Config": {
            "type": "object",
            "properties": {
                "autoinstall": {
                    "$ref": "#/definitions/config.Autoinstall"
                }
            }
        },
        "config.DiskMatch": {
            "type": "object",
            "properties": {
                "firmware_version": {
                    "type": "string"
                },
                "model": {
                    "description": "Disk model string (e.g., Samsung SSD 860)",
                    "type": "string"
                },
                "name": {
                    "description": "e.g. \"sda\"",
                    "type": "string"
                },
                "path": {
                    "description": "/dev/disk/by-path/...",
                    "type": "string"
                },
                "serial": {
                    "description": "serial number",
                    "type": "string"
                },
                "size": {
                    "description": "e.g. \"largest\", \"smallest\", \"100G\"",
                    "type": "string"
                },
                "wwn": {
                    "description": "World Wide Name",
                    "type": "string"
                }
            }
        },
        "config.DriversConfig": {
            "type": "object",
            "properties": {
                "install": {
                    "type": "boolean"
                }
            }
        },
        "config.DummyDevice": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.Ethernet": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.GrubConfig": {
            "type": "object",
            "properties": {
                "reorder_uefi": {
                    "type": "boolean"
                }
            }
        },
        "config.Identity": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realname": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "config.KernelConfig": {
            "type": "object",
            "properties": {
                "package": {
                    "type": "string"
                }
            }
        },
        "config.KeyboardConfig": {
            "type": "object",
            "properties": {
                "layout": {
                    "type": "string"
                },
                "toggle": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "config.Match": {
            "type": "object",
            "properties": {
                "driver": {
                    "type": "string"
                },
                "macaddress": {
                    "type": "string"
                },
                "name": {
                    "description": "glob supported, e.g., \"en*\"",
                    "type": "string"
                }
            }
        },
        "config.Modem": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "apn": {
                    "type": "string"
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "pin": {
                    "type": "string"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.NMDevice": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passthrough": {
                    "type": "object",
                    "additionalProperties": true
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "config.Nameservers": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "search": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "config.NetworkConfig": {
            "type": "object",
            "properties": {
                "bonds": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.Bond"
                    }
                },
                "bridges": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.Bridge"
                    }
                },
                "dummy-devices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.DummyDevice"
                    }
                },
                "ethernets": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.Ethernet"
                    }
                },
                "modems": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.Modem"
                    }
                },
                "nm-devices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.NMDevice"
                    }
                },
                "renderer": {
                    "description": "network-renderer (e.g., \"networkd\", \"NetworkManager\")",
                    "type": "string"
                },
                "tunnels": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.Tunnel"
                    }
                },
                "version": {
                    "type": "integer"
                },
                "vlans": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.VLAN"
                    }
                },
                "vrfs": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.VRF"
                    }
                },
                "wifis": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.Wifi"
                    }
                }
            }
        },
        "config.PrimaryEntry": {
            "type": "object",
            "properties": {
                "arches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "config.Route": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "source prefix",
                    "type": "string"
                },
                "metric": {
                    "type": "integer"
                },
                "mtu": {
                    "type": "integer"
                },
                "on-link": {
                    "type": "boolean"
                },
                "table": {
                    "type": "integer"
                },
                "to": {
                    "description": "destination CIDR, or \"default\"",
                    "type": "string"
                },
                "type": {
                    "description": "e.g., \"unicast\" (rarely needed)",
                    "type": "string"
                },
                "via": {
                    "description": "next-hop",
                    "type": "string"
                }
            }
        },
        "config.RoutingPolicy": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "fwmark": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "table": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "config.SSHConfig": {
            "type": "object",
            "properties": {
                "allow-pw": {
                    "type": "boolean"
                },
                "authorized-keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "install-server": {
                    "type": "boolean"
                }
            }
        },
        "config.Storage": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.StorageConfig"
                    }
                },
                "grub": {
                    "$ref": "#/definitions/config.GrubConfig"
                },
                "swap": {
                    "$ref": "#/definitions/config.SwapConfig"
                }
            }
        },
        "config.StorageConfig": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "string"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dm_name": {
                    "description": "For dm_crypt encryption",
                    "type": "string"
                },
                "flag": {
                    "type": "string"
                },
                "fstype": {
                    "description": "e.g. \"ext4\", \"btrfs\", \"xfs\"",
                    "type": "string"
                },
                "grub_device": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "key": {
                    "description": "For dm_crypt encryption",
                    "type": "string"
                },
                "keyfile": {
                    "description": "For dm_crypt encryption",
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.DiskMatch"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "preserve": {
                    "type": "boolean"
                },
                "ptable": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "volgroup": {
                    "type": "string"
                },
                "volume": {
                    "type": "string"
                },
                "wipe": {
                    "description": "Supported: superblock, superblock-recursive, pvremove, zero, random",
                    "type": "string"
                }
            }
        },
        "config.SwapConfig": {
            "type": "object",
            "properties": {
                "swap": {
                    "type": "integer"
                }
            }
        },
        "config.Tunnel": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "key": {
                    "description": "GRE key, optional",
                    "type": "integer"
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "local": {
                    "type": "string"
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mode": {
                    "description": "gre, ipip, sit, gretap, etc.",
                    "type": "string"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "port": {
                    "description": "if applicable",
                    "type": "integer"
                },
                "remote": {
                    "type": "string"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.VLAN": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "description": "parent interface",
                    "type": "string"
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.VRF": {
            "type": "object",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "Policy routing specific to this VRF",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "table": {
                    "type": "integer"
                }
            }
        },
        "config.Wifi": {
            "type": "object",
            "properties": {
                "access-points": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/config.WifiAP"
                    }
                },
                "addresses": {
                    "description": "e.g., 192.168.1.10/24",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "critical": {
                    "type": "boolean"
                },
                "dhcp4": {
                    "type": "boolean"
                },
                "dhcp6": {
                    "type": "boolean"
                },
                "link-local": {
                    "description": "e.g., [\"ipv4\", \"ipv6\", \"off\"]",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "macaddress": {
                    "type": "string"
                },
                "match": {
                    "$ref": "#/definitions/config.Match"
                },
                "mtu": {
                    "type": "integer"
                },
                "nameservers": {
                    "$ref": "#/definitions/config.Nameservers"
                },
                "optional": {
                    "type": "boolean"
                },
                "routes": {
                    "description": "policy routes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.Route"
                    }
                },
                "routing-policy": {
                    "description": "policy routing rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/config.RoutingPolicy"
                    }
                },
                "wakeonlan": {
                    "type": "boolean"
                }
            }
        },
        "config.WifiAP": {
            "type": "object",
            "properties": {
                "auth": {
                    "description": "backend-specific, rarely used",
                    "type": "string"
                },
                "band": {
                    "description": "e.g., \"2.4GHz\", \"5GHz\"",
                    "type": "string"
                },
                "bssid": {
                    "description": "AP MAC, optional",
                    "type": "string"
                },
                "channel": {
                    "type": "integer"
                },
                "client-auth": {
                    "description": "tls/wpa-enterprise etc. (simplified)",
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "mode": {
                    "description": "e.g., \"infrastructure\"",
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
