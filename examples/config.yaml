#cloud-config
autoinstall:
  apt:
    disable_components: []
    disable_suites: [security]
    geoip: true
    preserve_sources_list: false
    primary:
      - arches:
          - amd64
          - i386
        uri: http://archive.ubuntu.com/ubuntu
      - arches:
          - default
        uri: http://ports.ubuntu.com/ubuntu-ports
  drivers:
    install: false
  identity:
#    hostname: wsa
#    password: $6$8uAtTxrhimflt9dY$Oy9I5tgs6iBdGhKVQFMTMoQYPINr5qgwvYlfjCF24eaNqRITSENsvbUA1DhkXWZ4bJNL2iJ/VMKjIiAG.UhWt0
#    realname: wsa
#    username: wsa
    hostname: ubuntu
    # default password: 12345
    password: $6$FnHPy.4giHfDcI8r$vllY94AceZFt20M6WzxXKfOLuycO7o8QD8RJJwVs/DSGcHNNF4ilbGrukXPMA3irAdiimHo0fl2zUdkbRO9vh1
    realname: ubuntu
    username: ubuntu
  kernel:
    package: linux-generic
  keyboard:
    layout: us
    toggle: null
    variant: ''
  locale: en_US.UTF-8
  network:
    ethernets:
      # Note: This NIC name ens136 is my custom name, during installation, if you specify the config-network.sh script, it will
      # be automatically changed to the first NIC name of the machine itself
      ens136:
        addresses:
          - 192.168.6.100/24
        gateway4: 192.168.6.1
        nameservers:
          addresses:
            - 114.114.114.114
          search: []
    version: 2
  ssh:
    allow-pw: true
    authorized-keys: []
    install-server: true
  storage:
    config:
      - type: disk
        id: disk0
        grub_device: true
        ptable: gpt
        wipe: superblock-recursive
        match:
          size: largest
        name: ""
        preserve: false

      - type: partition
        id: bios-grub-part
        device: disk0
        number: 1
        size: 1048576
        flag: bios_grub
        preserve: false
        grub_device: false
        wipe: superblock

      - type: partition
        id: boot-part
        device: disk0
        number: 2
        size: 2147483648
        preserve: false
        wipe: superblock

      - type: format
        id: boot-fs
        volume: boot-part
        fstype: ext4
        preserve: false

      - type: partition
        id: pv-part
        device: disk0
        number: 3
        size: -1
        preserve: false
        wipe: superblock

      - type: lvm_volgroup
        id: vg0
        name: ubuntu-vg
        devices: [ pv-part ]
        preserve: false

      - type: lvm_partition
        id: lv-swap
        volgroup: vg0
        name: swap
        size: 1073741824
        preserve: false
        wipe: superblock

      - type: format
        id: fs-swap
        volume: lv-swap
        fstype: swap
        preserve: false

      - type: lvm_partition
        id: lv-root
        volgroup: vg0
        name: ubuntu-lv
        size: -1
        preserve: false
        wipe: superblock

      - type: format
        id: fs-root
        volume: lv-root
        fstype: ext4
        preserve: false
      - type: mount
        id: mount-root
        path: /
        device: fs-root

      - type: mount
        id: mount-boot
        path: /boot
        device: boot-fs

      - type: mount
        id: mount-swap
        path: ""
        device: fs-swap
    swap:
      swap: 0
    grub:
      # This avoids a loop where we autoinstall, reboot to the autoinstaller USB, then autoinstall again and so on.
      reorder_uefi: False
  version: 1
  late-commands:
    - cp -rp /cdrom/mnt /target/
    - chmod +x /target/mnt/script/install-pkgs.sh
    - curtin in-target --target=/target -- /mnt/script/install-pkgs.sh
    - chmod +x /target/mnt/script/config.sh
    - curtin in-target --target=/target -- /mnt/script/config.sh
    - cp /cdrom/rc-local.service /target/lib/systemd/system/rc-local.service
    - curtin in-target --target=/target -- ln -s /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service
    - cp -p /cdrom/rc.local /target/etc/rc.local
    - chmod +x /target/etc/rc.local
    - systemctl daemon-reload
    - cp -rp /cdrom/mnt/wsa  /target/opt
    - cp /cdrom/mnt/wsa/wsa.service /target/lib/systemd/system/wsa.service
    - curtin in-target --target=/target -- ln -sn /lib/systemd/system/wsa.service  /etc/systemd/system/multi-user.target.wants/wsa.service